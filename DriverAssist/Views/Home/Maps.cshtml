@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Maps";
}
@model IEnumerable<DriverAssist.Models.Coordinate>

<script src="https://code.jquery.com/jquery-3.1.0.min.js"> </script>
<div id="map" style="height: 300px; height:50%; text-align: center; width: 100%;"></div>





<table id="mytable" class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Lat</th>
            <th>Lng</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th scope="row">1</th>
            <td>test</td>
            <td>test</td>
        </tr>
        <tr>
            <th scope="row">2</th>
            <td>test</td>
            <td>test</td>
        </tr>
    </tbody>
</table>

<script type="text/javascript">

    $('#mytable  tbody tr').click(function () {
        $(this).addClass('info').siblings().removeClass('info');
    });
</script>

<script>

    // This example creates an interactive map which constructs a polyline based on
    // user clicks. Note that the polyline only appears once its path property
    // contains two LatLng coordinates.



    var poly;
    var map;

    function initMap() {

        var model = @Html.Raw(Json.Encode(Model));
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 8,
            center: new google.maps.LatLng(model[1].Lat, model[1].Lng)
        });

        poly = new google.maps.Polyline({
            strokeColor: '#ff0000',
            strokeOpacity: 1.0,
            strokeWeight: 3
        });
        poly.setMap(map);

        $.each(model, function (i, item) {
            latLng = new google.maps.LatLng(item.Lat, item.Lng);

            var marker = new google.maps.Marker({
                position: latLng,
                title: poly.getPath().getLength().toString(), // tytul jet id, potem po nim zaznaczamy w tabeli
                map: map
            });
            poly.getPath().push(latLng);

            marker.setIcon('https://lh3.ggpht.com/hx6IeSRualApBd7KZB9s2N7bcHZIjtgr9VEuOxHzpd05_CZ6RxZwehpXCRN-1ps3HuL0g8Wi=w9-h9')

            // put in some information about each json object - in this case, the opening hours.
            var infowindow = new google.maps.InfoWindow({
                content: '#' + poly.getPath().getLength()
            });

            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, marker);
                $('#mytable th:nth-child(1)').each(function () {
                    if (marker.getTitle() == ($(this).html())) {
                        alert(marker.getTitle());
                        $(this).parent().addClass('info').siblings().removeClass('info');
                    }
                });
            });
            //$(function () { // adding table routeCoordinates
            //$('#myTable tr:last').after(' <tr><th scope="row">'i.toString()'</th> td>Mark</td> <td>Otto</td>  <td>mdo</td>  </tr>');
            //$("#mytable").find('tbody')
            //    .append($('<tr>')
            //        .append($('<th scope="row">' + i.toString() + '</th>'))
            //        .append($('<td>' + item.Lat.toString() + '</td>'))
            //        .append($('<td>' + item.Lng.toString() + '</td>'))
            //        .append($('</tr>'))
            //    );
            // });
        })



        // Add a listener for the click event
        // map.addListener('click', addLatLng);
    }

    // Handles click events on a map, and adds a new point to the Polyline.
    function addLatLng(event) {
        var path = poly.getPath();

        // Because path is an MVCArray, we can simply append a new coordinate
        // and it will automatically appear.
        path.push(event.latLng);

        // Add a new marker at the new plotted point on the polyline.
        var marker = new google.maps.Marker({
            position: event.latLng,
            title: '#' + path.getLength(),
            map: map
        });
    }

    google.maps.event.addDomListener(window, 'load', initMap);
</script>




@section scripts {


    <!--  Google Maps Plugin    -->
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>

    @*<script src="~/assets/js/myJS.js"></script>*@

    <!--<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAVdWukfQJEFY_VO20ny3G8egrK2gS2QvI"></script> -->
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAN2leofGiYu947JXBwlik7Gj0b5hgQ758&callback=initMap">
    </script>
}
